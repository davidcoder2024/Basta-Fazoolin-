print("Basta Fazoolin'") 

print(" ")

class Menu:


  def __init__(self, name, items, start_time, end_time):
    self.name = name
    self.items = items
    self.start_time = start_time
    self.end_time = end_time

  def __repr__(self):
    return "{name} menu available from {start} to {end}".format(name=self.name, start=self.start_time, end=self.end_time)

  def calculate_bill(self, purchased_items):
    total_price = 0
    for item in purchased_items:
        total_price += self.items.get(item, 0)
    return total_price
    

brunch_items = {
  'pancakes': 7.50, 'waffles': 9.00, 'burger': 11.00, 'home fries': 4.50, 'coffee': 1.50, 'espresso': 3.00, 'tea': 1.00, 'mimosa': 10.50, 'orange juice': 3.50
}
brunch = Menu("brunch", brunch_items, "11am", "4pm") 

early_bird_items = {
  'salumeria plate': 8.00, 'salad and breadsticks (serves 2, no refills)': 14.00, 'pizza with quattro formaggi': 9.00, 'duck ragu': 17.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 1.50, 'espresso': 3.00,
} 

early_bird = Menu("early bird", early_bird_items, "3pm", "6pm") 

dinner_items = {
  'crostini with eggplant caponata': 13.00, 'caesar salad': 16.00, 'pizza with quattro formaggi': 11.00, 'duck ragu': 19.50, 'mushroom ravioli (vegan)': 13.50, 'coffee': 2.00, 'espresso': 3.00,
} 

dinner = Menu("dinner", dinner_items, "5pm", "11pm") 

kids_items = {
  'chicken nuggets': 6.50, 'fusilli with wild mushrooms': 12.00, 'apple juice': 3.00
} 

kids = Menu("kids", kids_items, "11am", "9pm") 

print(brunch)
print(" ")

print('Breakfast Order:', 'Pancakes,', 'Home Fries, and', 'Coffee')
print("Total: $",str(brunch.calculate_bill(['pancakes', 'home fries', 'coffee'])))
print(" ")

print("Early Bird Order:", "Salumeria Plate, and", "Vegan Mushroom Ravioli")
print("Total: $",str(early_bird.calculate_bill(['salumeria plate', 'mushroom ravioli (vegan)'])))
print(" ")

print("Creating the Franchises")
print(" ")

class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus

  def __repr__(self):
    return "The store is located at {address}".format(address=self.address)
  
  def available_menus(self, time):
    available_menus = [] 
    for menu in self.menus:
      if time >= menu.start_time and time <= menu.end_time:
        available_menus.append(menu)
    return available_menus
        

flagship_address = "1232 West End Road"
new_installment_address = "12 East Mulberry Street"
flagship_store = Franchise(flagship_address, [brunch, early_bird, dinner, kids])
new_installment = Franchise(new_installment_address, [brunch, early_bird, dinner, kids]) 


#12pm Available Menus
available_menu_flagship = flagship_store.available_menus("12pm")
print("Available menus at 12pm for flagship store:", available_menu_flagship)

print(" ")

available_menu_new_installment = new_installment.available_menus("12pm")
print("Available menus at 12pm for new installment:", available_menu_new_installment)

print(" ")
print(" ")

#5pm Available Menus
available_menu_flagship = flagship_store.available_menus("5pm")
print("Available menus at 5pm for flagship store:", available_menu_flagship)

print(" ")

available_menu_new_installment = new_installment.available_menus("5pm")
print("Available menus at 5pm for new installment:", available_menu_new_installment)

print(" ")



class Business:
  
  def __init__(self, name, franchises):
    self.name = name
    self.franchises = franchises

basta_fazoolin = Business("Basta Fazoolin' with my Heart", [flagship_store, new_installment]) 

class Menu:
    def __init__(self, name, items, start_time, end_time):
        self.name = name
        self.items = items
        self.start_time = start_time
        self.end_time = end_time

arepas_items = {
    'arepa pabellon': 7.00, 'pernil arepa': 8.50, 'guayanes arepa': 8.00, 'jamon arepa': 7.50
}
arepas_menu = Menu("Take a' Arepa", arepas_items, "10am", "8pm")

class Franchise:
  def __init__(self, address, menus):
    self.address = address
    self.menus = menus

arepas_place = Franchise("189 Fitzgerald Avenue", [arepas_menu])

class Business:
  def __init__(self, name, franchise):
    self.name = name
    self.franchise = franchise

take_a_Arepa = Business("Take a' Arepa", arepas_place)
